[project]
name = "depictio"
version = "0.1.0-b7"
description = "Depictio API & Frontend"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
dependencies = [
  "bcrypt==4.2.1",
  "bleach",
  "beanie",
  "boto3==1.36.21",
  # "bson==0.5.10",
  "cryptography",
  "colorlog",
  # "curl",
  "dash-bootstrap-components==1.7.1",
  "dash-extensions==1.0.1",
  "dash-iconify==0.1.2",
  "dash-mantine-components==0.12.1",
  "dash==2.14.2",
  "deltalake==0.24.0",
  "fastapi==0.115.8",
  "fastparquet",
  "httpx==0.28.1",
  "motor",
  "mypy-boto3-s3",
  "numpy==2.2.3",
  "pandas==2.2.3",
  # "playwright==1.50.1",
  "plotly_express==0.4.1",
  "polars==1.22.0",
  "pydantic[email]==2.10.6",
  "pydantic-settings==2.7.1",
  "pyjwt==2.10.1",
  "pymongo",
  # "pymongo==4.11",
  "psutil",
  "pytest-playwright==0.7.0",
  # "python==3.12.9",
  "python-dotenv",
  "python-jose==3.3.0",
  "python-multipart",
  "pyyaml",
  "uvicorn==0.34.0",
  "dash-draggable==0.1.2",
  "dash-ag-grid==31.3.0",
  "tomli",
]
authors = [{ name = "Thomas Weber", email = "thomas.weber@embl.de" }]
urls = { Homepage = "http://github.com/depictio/depictio" }
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]

[project.optional-dependencies]
dev = [
  "black",
  "ruff",
  "pandera[pandas,polars]",
  "pre-commit",
  "pytest",
  "pytest-asyncio",
  "pytest",
  "pytest-xdist",
  "mongomock",
  "mongomock-motor",
  "bump2version",
  "types-bleach",
]

[project.scripts]
depictio-api = "depictio.api.run:main"
depictio-dash = "depictio.dash.app:main"


[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["depictio"]

# [tool.mypy]
# exclude = ["build/", "depictio/api/", "depictio/dash/"]
# files = ["depictio/tests/", "depictio/models/", "depictio/cli/"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "I"] # Enable import sorting (I rules)
ignore = ["E501"]  # Ignore all line length errors

[tool.ruff.lint.isort]
known-first-party = ["depictio"]


[tool.mypy]
# Basic settings
python_version = "3.11"              # Adjust to your Python version
warn_return_any = false
warn_unused_ignores = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = false

# Display settings - simpler output
show_error_context = false
show_column_numbers = true
error_summary = true
pretty = true

# Permissive settings
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = false
warn_no_return = false
warn_unreachable = false

# Per-module settings - only check specific directories
[[tool.mypy.overrides]]
module = ["depictio.models.*", "depictio.cli.*"]
check_untyped_defs = true


[tool.pytest.ini_options]
pythonpath = "."
python_files = "test_*.py"
testpaths = [
  "depictio/tests/api",
  "depictio/tests/models",
  "depictio/tests/cli",
  "depictio/tests/dash",
]
addopts = "-s"
markers = [
  "integration: mark test as an integration test.",
  "playwright: mark test as a playwright test.",
  "docker: mark test as requiring docker.",
]
filterwarnings = [
  "ignore::pydantic.warnings.PydanticDeprecatedSince20",
  "ignore::DeprecationWarning:pydantic.*",
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
