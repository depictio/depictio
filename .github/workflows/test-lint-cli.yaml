name: Test, Lint and Build depictio-cli

on:
  push:
    paths:
      - "depictio/cli/**"
      - "depictio/models/**"
      - "depictio/api/v1/configs/**"
  pull_request:
    paths:
      - "depictio/cli/**"
      - "depictio/models/**"
      - "depictio/api/v1/configs/**"
  workflow_dispatch:

jobs:
  quality:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Create and activate virtual environment
        run: |
          uv venv --python 3.11 venv
          echo "$GITHUB_WORKSPACE/venv/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/venv" >> $GITHUB_ENV

      - name: Install CLI package
        run: |
          cd depictio/cli
          uv pip install -e .

      - name: Install quality check dependencies
        run: uv pip install ruff pytest pytest-xdist pytest-asyncio mongomock mongomock-motor build twine

      - name: Run Ruff formatting
        run: ruff format depictio/cli depictio/models depictio/api/v1/configs

      - name: Run Ruff linting
        run: ruff check depictio/cli depictio/models depictio/api/v1/configs

      - name: Run tests
        run: pytest depictio/tests/cli depictio/tests/models -xvs -n auto

      - name: Build package
        run: |
          # cd depictio/cli
          cp depictio/cli/pyproject.toml .
          python -m build

      - name: Verify package
        run: |
          twine check dist/*

      - name: Install package
        run: |
          uv pip install dist/*.whl

      - name: Import package
        run: |
          # if the import fails, it will raise an error
          python -c "import depictio.cli; print('âœ… CLI package imports work')"

      - name: Run CLI help command
        run: |
          depictio-cli --help
