name: Create Release

on:
  push:
    tags:
      - 'v[0-9]*.[0-9]*.[0-9]*'        # Stable releases (v0.0.4)
      - 'v[0-9]*.[0-9]*.[0-9]*-b*'  # Beta releases (v0.0.4-b1)
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changelog:
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
      version: ${{ steps.version.outputs.version }}
      is_beta: ${{ steps.version.outputs.is_beta }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for changelog generation

      - name: Extract version info
        id: version
        run: |
          # Extract version from tag (remove 'v' prefix)
          TAG=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG" >> $GITHUB_OUTPUT

          # Determine if it's a beta
          if [[ $TAG == *"-b"* ]]; then
            echo "is_beta=true" >> $GITHUB_OUTPUT
          else
            echo "is_beta=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous release tag (excluding the current tag being released)
          CURRENT_TAG="${{ github.ref_name }}"
          PREVIOUS_TAG=$(git tag -l --sort=-version:refname | grep -v "^${CURRENT_TAG}$" | head -1)
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "No previous tag found, generating full changelog"
            PREVIOUS_TAG=""
          fi
          echo "Generating changelog from $PREVIOUS_TAG to $CURRENT_TAG"
          bash .github/scripts/changelog_generator.sh "$PREVIOUS_TAG" "$CURRENT_TAG" > CHANGELOG.md

          # Convert to GitHub Actions output
          CHANGELOG=$(cat CHANGELOG.md)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  create-release:
    runs-on: ubuntu-latest
    needs: [changelog]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ needs.changelog.outputs.version }}
          body: ${{ needs.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ needs.changelog.outputs.is_beta == 'true' }}
          token: ${{ secrets.GITHUB_TOKEN }}
          # Force overwrite existing release
          overwrite: true

      - name: Update CHANGELOG.md
        # if: ${{ needs.changelog.outputs.is_beta != 'true' }}
        run: |
          # Only update for stable releases
          echo "${{ needs.changelog.outputs.changelog }}" > /tmp/changelog_clean.md

          # Pull latest changes from main branch to avoid conflicts
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git fetch origin main
          git checkout main
          git pull origin main

          # Read existing changelog
          if [ -f CHANGELOG.md ]; then
            EXISTING_CHANGELOG=$(cat CHANGELOG.md)
          else
            EXISTING_CHANGELOG="# Changelog\n\n"
          fi

          # Create new changelog with the latest changes at the top
          echo -e "# Changelog\n\n$(cat /tmp/changelog_clean.md)\n\n${EXISTING_CHANGELOG#*#*\n\n}" > CHANGELOG.md

          # Commit and push the updated changelog
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md for v${{ needs.changelog.outputs.version }}"
          git push origin main
