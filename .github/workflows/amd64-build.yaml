name: AMD64 Docker Image Build

on:
  push:
    tags:
      - "v[0-9]*.[0-9]*.[0-9]*"        # Stable releases (v0.0.4) 
      - "v[0-9]*.[0-9]*.[0-9]*-beta*"  # Beta releases (v0.0.4-beta)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-amd64:
    # Use native x86 runner
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine build type
        id: build-type
        run: |
          # Extract the git tag (v0.0.4-beta, v0.0.4, etc.)
          GIT_TAG=${GITHUB_REF#refs/tags/}
          
          # Determine if it's a beta
          if [[ $GIT_TAG == *"-beta"* ]]; then
            echo "IS_BETA=true" >> $GITHUB_OUTPUT
          else
            echo "IS_BETA=false" >> $GITHUB_OUTPUT
          fi
          
          # Clean version number (without v prefix)
          CLEAN_VERSION=${GIT_TAG#v}
          echo "VERSION=$CLEAN_VERSION" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Version with architecture suffix
            type=raw,value=${{ steps.build-type.outputs.VERSION }}-amd64
            
            # Tag with beta/stable and architecture
            type=raw,value=beta-amd64,enable=${{ steps.build-type.outputs.IS_BETA == 'true' }}
            type=raw,value=stable-amd64,enable=${{ steps.build-type.outputs.IS_BETA != 'true' }}
            
            # Always tag as dev/edge with architecture
            type=raw,value=dev-amd64
            type=raw,value=edge-amd64

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker-images/Dockerfile_depictio.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # No need to specify platform when running on native hardware
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache-amd64
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache-amd64,mode=max