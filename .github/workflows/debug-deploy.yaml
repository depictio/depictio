name: Debug Docker Issues

on:
  workflow_dispatch:

jobs:
  debug-docker:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create debug script
        run: |
          cat > debug-github-actions.sh << 'EOF'
          #!/bin/bash
          set -e

          echo "===== ENVIRONMENT INFO ====="
          echo "Working directory: $(pwd)"
          echo "User: $(whoami) (UID: $(id -u), GID: $(id -g))"
          echo "Docker version: $(docker --version)"
          echo "Docker Compose version: $(docker compose version)"

          echo "===== DIRECTORY STRUCTURE ====="
          echo "Root directory:"
          ls -la

          echo "Docker images directory:"
          ls -la docker-images

          echo "Docker Compose directory:"
          ls -la docker-compose

          echo "Depictio directory:"
          ls -la depictio

          echo "===== DOCKER BUILD DEBUGGING ====="
          echo "Checking if Dockerfile exists:"
          if [ -f "docker-images/Dockerfile_depictio.dockerfile" ]; then
            echo "✅ Dockerfile found"
            head -n 10 docker-images/Dockerfile_depictio.dockerfile
          else
            echo "❌ Dockerfile not found"
          fi

          echo "Checking if run scripts exist:"
          if [ -f "docker-images/run_dash.sh" ] && [ -f "docker-images/run_fastapi.sh" ]; then
            echo "✅ Run scripts found"
          else
            echo "❌ Run scripts not found"
          fi

          echo "===== DOCKER COMPOSE CONFIG ====="
          cd docker-compose
          docker compose -f docker-compose.dev.yaml config

          echo "===== ATTEMPTING DOCKER BUILD ====="
          cd ..
          docker build -f docker-images/Dockerfile_depictio.dockerfile -t depictio:test .

          echo "===== DEBUGGING COMPLETE ====="
          EOF
          chmod +x debug-github-actions.sh
      
      - name: Run debug script
        run: ./debug-github-actions.sh
        
      - name: Configure Docker Permissions
        run: |
          sudo usermod -aG docker $USER || true
          sudo chmod 666 /var/run/docker.sock
          
      - name: Export UID and GID
        run: |
          echo "UID=$(id -u)" >> $GITHUB_ENV
          echo "GID=$(id -g)" >> $GITHUB_ENV
          
      - name: Generate .env
        run: |
          cp .env.example .env
          
      - name: Create and Set Permissions for Directories
        run: |
          mkdir -p depictioDB/
          chown -R "$(id -u):$(id -g)" depictioDB/
          chmod -R 777 depictioDB/
          
          mkdir -p minio_data/
          chown -R "$(id -u):$(id -g)" minio_data/
          chmod -R 775 minio_data/
          
      - name: Build Docker image directly
        run: |
          docker build -f docker-images/Dockerfile_depictio.dockerfile -t depictio:dev .
          
      - name: Start Docker Compose Services with debug
        run: |
          export DEPICTIO_LOGGING_VERBOSITY_LEVEL=DEBUG
          cd docker-compose
          docker compose -f docker-compose.dev.yaml up -d
          
      - name: Check container logs immediately
        run: |
          echo "===== CONTAINER STATUS ====="
          docker ps -a
          
          echo "===== BACKEND LOGS ====="
          docker logs depictio-backend
          
          echo "===== FRONTEND LOGS ====="
          docker logs depictio-frontend
          
          echo "===== MONGO LOGS ====="
          docker logs mongo
      
      - name: Wait for services to be healthy
        run: |
          echo "Waiting for services to be healthy..."
          sleep 30  # Adjust the sleep time as needed

      - name: Check container logs after waiting
        run: |
          echo "===== CONTAINER STATUS ====="
          docker ps -a
          
          echo "===== BACKEND LOGS ====="
          docker logs depictio-backend
          
          echo "===== FRONTEND LOGS ====="
          docker logs depictio-frontend
          
          echo "===== MONGO LOGS ====="
          docker logs mongo