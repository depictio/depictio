name: Test, Lint, Build and Publish depictio-cli

on:
  push:
    paths:
      - 'depictio/cli/**'
      - 'depictio/models/**'
      - 'depictio/api/v1/configs/**'
      - '.github/workflows/depictio-cli-test-and-publish.yaml'
    tags:
      - 'v*.*.*'
      - 'v*.*.*-b*'
  pull_request:
    paths:
      - 'depictio/cli/**'
      - 'depictio/models/**'
      - 'depictio/api/v1/configs/**'
      - '.github/workflows/depictio-cli-test-and-publish.yaml'
  workflow_dispatch:

jobs:
  quality:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create and activate virtual environment
        run: |
          uv venv --python 3.11 venv
          echo "$GITHUB_WORKSPACE/venv/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/venv" >> $GITHUB_ENV

      - name: Install CLI package
        run: |
          cd depictio/cli
          uv pip install -e .

      - name: Install quality check dependencies
        run: uv pip install ruff pytest pytest-xdist pytest-asyncio mongomock mongomock-motor build twine

      - name: Run Ruff formatting
        run: ruff format depictio/cli depictio/models depictio/api/v1/configs

      - name: Run Ruff linting
        run: ruff check depictio/cli depictio/models depictio/api/v1/configs

      - name: Run tests
        run: pytest depictio/tests/cli depictio/tests/models -xvs -n auto

      - name: Build package
        run: |
          cd depictio/cli
          python -m build

      - name: Verify package
        run: |
          cd depictio/cli
          twine check dist/*

      - name: Upload build artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: depictio/cli/dist/

  publish:
    runs-on: ubuntu-latest
    needs: quality
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      id-token: write  # For trusted publishing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: depictio/cli/dist/

      - name: Install publishing dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine

      - name: Verify build artifacts
        run: |
          cd depictio/cli
          python -m twine check dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: depictio/cli/dist/
          skip-existing: true
          verify-metadata: true
