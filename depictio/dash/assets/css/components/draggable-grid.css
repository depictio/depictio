/* =============================================================================
   DRAGGABLE GRID COMPONENTS
   All styles related to the draggable grid layout system
   ============================================================================= */

/* Draggable components background */
.react-grid-item,
.react-grid-item .card,
.react-grid-item [data-mantine="Card"],
#draggable .react-grid-item,
#draggable .react-grid-item > *,
#draggable .react-grid-item [class*="Card"] {
    background-color: var(--app-surface-color, var(--depictio-surface-light)) !important;
    color: var(--app-text-color, var(--depictio-text-light)) !important;
    transition: background-color 0.2s ease, color 0.2s ease;
}

/* Bootstrap card components in draggable items */
.react-grid-item .card-body,
.react-grid-item .card-header,
#draggable .card,
#draggable .card-body,
#draggable .card-header {
    background-color: var(--app-surface-color, var(--depictio-surface-light)) !important;
    color: var(--app-text-color, var(--depictio-text-light)) !important;
    transition: background-color 0.2s ease, color 0.2s ease;
}

/* Style resize handles to be invisible like in prototype */
.react-grid-item > .react-resizable-handle {
    background: transparent !important;
    border: none !important;
    box-shadow: none !important;
    opacity: 0 !important;
}

.react-grid-item:hover > .react-resizable-handle {
    opacity: 0.7 !important;
}

/* Dark mode - make handle arrow icons white/light grey */
[data-mantine-color-scheme="dark"] .react-grid-item:hover > .react-resizable-handle::before,
[data-mantine-color-scheme="dark"] .react-grid-item:hover > .react-resizable-handle::after {
    filter: invert(1) !important;
}

/* Hide container completely in dark mode */
[data-mantine-color-scheme="dark"] .react-grid-item:hover > .react-resizable-handle {
    background: none !important;
    background-color: transparent !important;
    background-image: none !important;
    border: none !important;
    box-shadow: none !important;
    outline: none !important;
}

/* Add stroke when dragging or resizing */
.react-grid-item.react-grid-item-dragging,
.react-grid-item.react-grid-item-resizing {
    border: 2px solid var(--app-text-color, #666) !important;
    box-shadow: 0 0 0 1px rgba(102, 102, 102, 0.2) !important;
    z-index: 1000 !important;
}

/* Subtle dashed border on component hover - similar to text component */
.react-grid-item:hover {
    border: 1px dashed var(--app-border-color, #dee2e6) !important;
    transition: border-color 0.2s ease, box-shadow 0.2s ease !important;
}

/* Solid border when drag handle is being hovered/used */
.react-grid-item:has(.react-grid-dragHandle:hover) {
    border: 1px solid var(--app-text-color, #666) !important;
    box-shadow: 0 0 0 1px rgba(102, 102, 102, 0.1) !important;
}

/* Hide remove button (Ã—) */
.react-grid-item .remove,
.react-grid-item span.remove {
    display: none !important;
    visibility: hidden !important;
}

/* Hide the default drag handle completely, but keep functionality for ActionIcon with this class */
.react-grid-dragHandle:not(.mantine-ActionIcon-root) {
    display: none !important;
    visibility: hidden !important;
    height: 0 !important;
    padding: 0 !important;
    margin: 0 !important;
    min-height: 0 !important;
}

/* Make ActionIcon drag handles functional and styled - only visible on component hover */
.mantine-ActionIcon-root.react-grid-dragHandle {
    cursor: grab !important;
    opacity: 0 !important;  /* Hidden by default */
    transition: opacity 0.2s ease !important;
}

.mantine-ActionIcon-root.react-grid-dragHandle:hover {
    cursor: grabbing !important;
}

/* Show drag handle only when parent component is hovered */
.react-grid-item:hover .mantine-ActionIcon-root.react-grid-dragHandle {
    opacity: 1 !important;
}

/* Remove any conflicting pseudo-elements from ActionIcon drag handles */
.mantine-ActionIcon-root.react-grid-dragHandle::before,
.mantine-ActionIcon-root.react-grid-dragHandle::after,
.mantine-ActionIcon-root[id*="drag-handle"]::before,
.mantine-ActionIcon-root[id*="drag-handle"]::after {
    content: none !important;
    display: none !important;
}

/* Ensure ActionIcon children (DashIconify) are properly displayed */
.mantine-ActionIcon-root.react-grid-dragHandle > * {
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
}

/* Drag handle styles removed - using ActionIcon instead */

/* Draggable component background enhancement */
.react-grid-item.dashboard-component-hover {
    background: var(--app-surface-color);
    border: 1px solid var(--app-border-color);
    border-radius: 8px;
    transition: all 0.3s ease;
}

.react-grid-item.dashboard-component-hover:hover {
    border-color: var(--app-text-color, #666);
    box-shadow: 0 4px 12px rgba(102, 102, 102, 0.15);
}

/* Component interaction effects */
.dashboard-component-hover {
    position: relative;
    transition: transform 0.2s ease;
}

.dashboard-component-hover:hover {
    transform: translateY(-2px);
}

.dashboard-component-hover::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, transparent, rgba(99, 102, 241, 0.05), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 1;
    pointer-events: none;
}

.dashboard-component-hover:hover::before {
    opacity: 1;
}

/* =============================================================================
   DRAG DISABLE FUNCTIONALITY - REMOVED
   Now using properties-only approach like the working version2 script
   ============================================================================= */

/* Hide drag handles when edit mode is disabled */
.drag-handles-hidden .react-grid-dragHandle {
    display: none !important;
    visibility: hidden !important;
}

/* Normalize wrapper div padding between edit and non-edit modes - minimize white space */
.react-grid-item > div {
    padding: 2px !important;
    max-height: 100% !important;
    max-width: 100% !important;
    height: 100% !important;
    box-sizing: border-box !important;
}

/* Hide the old remove button completely */
.react-grid-item .remove {
    display: none !important;
    visibility: hidden !important;
}

/* Minimize padding between card-component and card elements */
.react-grid-item [id*="card-component"] {
    padding: 0px !important;
    margin: 0px !important;
}

.react-grid-item [id*="card-body"] {
    padding: 2px !important;
}

.react-grid-item [id*="card"] .mantine-Card-root {
    padding: var(--mantine-spacing-xs) !important;
}

/* Hide ActionIconGroup and individual ActionIcons by default - only visible on component hover */
.react-grid-item .mantine-ActionIconGroup-root {
    opacity: 0 !important;
    transition: opacity 0.2s ease !important;
    pointer-events: none !important;
}

.react-grid-item .mantine-ActionIcon-root[id*="remove-box-button"],
.react-grid-item .mantine-ActionIcon-root[id*="edit-box-button"],
.react-grid-item .mantine-ActionIcon-root[id*="duplicate-box-button"],
.react-grid-item .mantine-ActionIcon-root[id*="reset-selection-graph-button"] {
    opacity: 0 !important;
    transition: opacity 0.2s ease !important;
    pointer-events: none !important;
}

/* Show ActionIconGroup and individual ActionIcons only when parent component is hovered */
.react-grid-item:hover .mantine-ActionIconGroup-root {
    opacity: 1 !important;
    pointer-events: auto !important;
}

.react-grid-item:hover .mantine-ActionIcon-root[id*="remove-box-button"],
.react-grid-item:hover .mantine-ActionIcon-root[id*="edit-box-button"],
.react-grid-item:hover .mantine-ActionIcon-root[id*="duplicate-box-button"],
.react-grid-item:hover .mantine-ActionIcon-root[id*="reset-selection-graph-button"] {
    opacity: 1 !important;
    pointer-events: auto !important;
}

/* Hide ActionIconGroup completely when edit mode is disabled (matching drag handle pattern) */
.drag-handles-hidden .mantine-ActionIconGroup-root {
    display: none !important;
    visibility: hidden !important;
}

/* Make drag handle cursor change to grabbing on hover */
.react-grid-item:hover .mantine-ActionIcon-root[id*="drag-handle"]:hover,
.react-grid-item:hover .mantine-ActionIcon-root.react-grid-dragHandle:hover {
    cursor: grabbing !important;
}

/* Hide action buttons and drag handle completely when edit mode is disabled */
.drag-handles-hidden .mantine-ActionIconGroup-root,
.drag-handles-hidden .mantine-ActionIcon-root[id*="drag-handle"],
.drag-handles-hidden .mantine-ActionIcon-root[id*="remove-box-button"],
.drag-handles-hidden .mantine-ActionIcon-root[id*="edit-box-button"],
.drag-handles-hidden .mantine-ActionIcon-root[id*="duplicate-box-button"],
.drag-handles-hidden .mantine-ActionIcon-root[id*="reset-selection-graph-button"] {
    display: none !important;
    visibility: hidden !important;
}
