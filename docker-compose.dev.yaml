services:
  mongo:
    image: mongo:8.0
    container_name: mongo
    command: mongod --dbpath /data/depictioDB --port 27018 --logpath /dev/null
    user: "${UID:-1000}:${GID:-1000}"
    ports:
      - 27018:27018
    volumes:
      - ./depictioDB:/data/depictioDB

  redis:
    image: redis:8.2.1
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  depictio-frontend:
    container_name: depictio-frontend
    # Use prebuilt image if DEPICTIO_VERSION is set, otherwise build locally
    image: ${DEPICTIO_VERSION:-depictio:dev}
    build:
      dockerfile: docker-images/Dockerfile_depictio.dockerfile
      context: .
    ports:
      - 5080:5080
    volumes:
      - ./depictio:/app/depictio
      - ./docker-images/run_dash.sh:/app/run_dash.sh
      - ./pyproject.toml:/app/pyproject.toml
      - ./prof_files:/app/prof_files
      - ./cache:/app/cache
    env_file:
      - docker-compose/.env
    environment:
        DEV_MODE: "${DEV_MODE:-false}"
        DEPICTIO_LOGGING_VERBOSITY_LEVEL: "${DEPICTIO_LOGGING_VERBOSITY_LEVEL:-DEBUG}"
    command: ["/app/run_dash.sh"]
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      - mongo
      - redis
      - depictio-backend

  depictio-backend:
    container_name: depictio-backend
    # Use prebuilt image if DEPICTIO_VERSION is set, otherwise build locally
    image: ${DEPICTIO_VERSION:-depictio:dev}
    build:
      dockerfile: docker-images/Dockerfile_depictio.dockerfile
      context: .
    ports:
      - 8058:8058
    volumes:
      - ./depictio:/app/depictio
      - ./pyproject.toml:/app/pyproject.toml
      - ./docker-images/run_fastapi.sh:/app/run_fastapi.sh
      - ./prof_files:/app/prof_files
    env_file:
      - docker-compose/.env
    environment:
        DEV_MODE: "${DEV_MODE:-false}"
        DEPICTIO_LOGGING_VERBOSITY_LEVEL: "${DEPICTIO_LOGGING_VERBOSITY_LEVEL:-DEBUG}"
    command: ["/app/run_fastapi.sh"]
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      - mongo
      - redis

  # depictio-celery-worker:
  #   container_name: depictio-celery-worker
  #   # Use the same image as backend
  #   image: ${DEPICTIO_VERSION:-depictio:dev}
  #   build:
  #     dockerfile: docker-images/Dockerfile_depictio.dockerfile
  #     context: .
  #   volumes:
  #     - ./depictio:/app/depictio
  #     - ./pyproject.toml:/app/pyproject.toml
  #     - ./docker-images/run_celery_worker.sh:/app/run_celery_worker.sh
  #     - ./prof_files:/app/prof_files
  #   env_file:
  #     - docker-compose/.env
  #   environment:
  #       DEV_MODE: "${DEV_MODE:-false}"
  #       DEPICTIO_LOGGING_VERBOSITY_LEVEL: "${DEPICTIO_LOGGING_VERBOSITY_LEVEL:-DEBUG}"
  #       DEPICTIO_CONTEXT: "celery"
  #   command: ["/app/run_celery_worker.sh"]
  #   user: "${UID:-1000}:${GID:-1000}"
  #   depends_on:
  #     - mongo
  #     - redis
  #     - depictio-backend

volumes:
  redis_data:
    driver: local
