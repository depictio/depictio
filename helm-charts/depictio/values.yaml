# Global values
nameOverride: ""
fullnameOverride: ""

# Application name (used in labels)
appname: "depictio"

# Project configuration (required for matchLabels)
project:
  slug: "depictio" # Add your project slug here

# Storage settings
storageClass: "standard"
persistence:
  mongo:
    size: 1Gi
    accessMode: ReadWriteMany
  minio:
    size: 1Gi
    accessMode: ReadWriteMany
  screenshots:
    size: 100Mi
    accessMode: ReadWriteMany
  keys:
    size: 1Mi
    accessMode: ReadWriteMany

# Secrets
secrets:
  # Optionally override the generated MinIO access key
  minioRootUser: ""
  # Optionally override the generated MinIO secret key
  minioRootPassword: ""

local_development: false # Set to true for local development

# MongoDB settings
mongo:
  image:
    repository: mongo # Added repository for MongoDB
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "1Gi"
      cpu: "0.5"
    limits:
      memory: "2Gi"
      cpu: "1"
  service:
    type: ClusterIP
    port: 27018

# MinIO settings
minio:
  enabled: true
  image:
    repository: minio/minio
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "1Gi"
      cpu: "0.5"
    limits:
      memory: "2Gi"
      cpu: "1"
  service:
    type: ClusterIP
    httpPort: 9000
    consolePort: 9001

# Backend settings
backend:
  image:
    repository: ghcr.io/depictio/depictio # Corrected repository path with .io
    tag: "0.1.1"
    pullPolicy: Always
  resources:
    requests:
      memory: "1Gi"
      cpu: "0.5"
    limits:
      memory: "4Gi"
      cpu: "2"
  service:
    type: ClusterIP
    httpPort: 80
    httpsPort: 443
    targetPort: 8058
  env:
    DEPICTIO_CONTEXT: "server"
    DEV_MODE: "false"
    DEPICTIO_LOGGING_VERBOSITY_LEVEL: "DEBUG"
    DEPICTIO_FASTAPI_SERVICE_PORT: "8058"
    DEPICTIO_DASH_SERVICE_PORT: "80"
    DEPICTIO_MONGODB_WIPE: "false" # Set to true for development to wipe MongoDB on startup
    # DEPICTIO_DASH_SERVICE_NAME: "depictio-frontend"
    # DEPICTIO_FASTAPI_PUBLIC_URL: "https://{{ .Release.Name }}-api.{{ .Values.global.domain }}"
    # DEPICTIO_MINIO_PUBLIC_URL: "https://{{ .Release.Name }}-minio.{{ .Values.global.domain }}"

    # Production Performance Settings - adjust these for your environment
    # HTTP client timeouts (in seconds)
    DEPICTIO_PERFORMANCE_HTTP_CLIENT_TIMEOUT: "60"           # Increased for production latency
    DEPICTIO_PERFORMANCE_API_REQUEST_TIMEOUT: "90"           # Longer API timeouts for prod

    # Browser/Playwright timeouts (in milliseconds) - production optimized
    DEPICTIO_PERFORMANCE_BROWSER_NAVIGATION_TIMEOUT: "90000"  # 90s for navigation in prod
    DEPICTIO_PERFORMANCE_BROWSER_PAGE_LOAD_TIMEOUT: "120000"  # 120s for full page load
    DEPICTIO_PERFORMANCE_BROWSER_ELEMENT_TIMEOUT: "45000"     # 45s for element waits

    # Screenshot-specific timeouts - addresses 4+ minute issue
    DEPICTIO_PERFORMANCE_SCREENSHOT_NAVIGATION_TIMEOUT: "75000"  # 75s for screenshot navigation
    DEPICTIO_PERFORMANCE_SCREENSHOT_CONTENT_WAIT: "30000"        # 30s for content loading
    DEPICTIO_PERFORMANCE_SCREENSHOT_STABILIZATION_WAIT: "10000"  # 10s for UI stabilization
    DEPICTIO_PERFORMANCE_SCREENSHOT_CAPTURE_TIMEOUT: "120000"    # 120s for actual screenshot capture
    DEPICTIO_PERFORMANCE_SCREENSHOT_API_TIMEOUT: "360"          # 6 minutes for complete screenshot API call

    # Service readiness checks - more robust for production
    DEPICTIO_PERFORMANCE_SERVICE_READINESS_RETRIES: "8"      # More retries for prod infrastructure
    DEPICTIO_PERFORMANCE_SERVICE_READINESS_DELAY: "5"        # Longer delay between retries
    DEPICTIO_PERFORMANCE_SERVICE_READINESS_TIMEOUT: "15"     # Longer timeout per check

    # Network performance optimizations for production
    DEPICTIO_PERFORMANCE_DNS_CACHE_TTL: "600"                # 10 minutes DNS cache
    DEPICTIO_PERFORMANCE_CONNECTION_POOL_SIZE: "20"          # Larger connection pool
    DEPICTIO_PERFORMANCE_MAX_KEEPALIVE_CONNECTIONS: "10"     # More keepalive connections
  securityContext:
    fsGroup: 2000

# Frontend settings
frontend:
  image:
    repository: ghcr.io/depictio/depictio # Corrected repository path with .io
    tag: "0.1.1"
    pullPolicy: Always
  resources:
    requests:
      memory: "1Gi"
      cpu: "0.5"
    limits:
      memory: "4Gi"
      cpu: "2"
  service:
    type: ClusterIP
    httpPort: 80
    httpsPort: 443
    targetPort: 5080
  env:
    DEV_MODE: "false"
    # DEPICTIO_FASTAPI_SERVICE_NAME: "depictio-backend"
    DEPICTIO_FASTAPI_SERVICE_PORT: "80"
    DEPICTIO_DASH_SERVICE_PORT: "5080"
    # DEPICTIO_FASTAPI_PUBLIC_URL: "https://{{ .Release.Name }}-api.{{ .Values.global.domain }}"
    # DEPICTIO_MINIO_PUBLIC_URL: "https://{{ .Release.Name }}-minio.{{ .Values.global.domain }}"

    # Frontend inherits same performance settings as backend
    DEPICTIO_PERFORMANCE_HTTP_CLIENT_TIMEOUT: "60"
    DEPICTIO_PERFORMANCE_API_REQUEST_TIMEOUT: "90"
    DEPICTIO_PERFORMANCE_CONNECTION_POOL_SIZE: "15"          # Slightly smaller pool for frontend
    DEPICTIO_PERFORMANCE_MAX_KEEPALIVE_CONNECTIONS: "8"

# Generic base ingress values
ingress:
  enabled: true
  ingressClassName: "nginx" # Default ingress class

  # You can leave hosts empty here since environment-specific values will override
  hosts: []

  # Default empty annotations and labels
  annotations: {}
  labels: {}

  # Empty TLS configuration by default
  tls: []

global:
  domain: "example.com" # Default domain, can be overridden in environment-specific values
