// MultiQC Automation functions - using the working logic
window.dash_clientside = Object.assign({}, window.dash_clientside, {
    multiqc: Object.assign(window.dash_clientside.multiqc || {}, {
        
        // Click Plus button (WORKING VERSION)
        clickPlusButton: function() {
            const access = window.dash_clientside.multiqc.getIframeAccess();
            if (!access.success) {
                return access.error;
            }
            
            const iframeDoc = access.doc;
            const plusButton = iframeDoc.querySelector(window.dash_clientside.multiqc.selectors.plusButton);
            
            if (plusButton) {
                plusButton.disabled = false;
                plusButton.click();
                return '‚úÖ Plus button clicked! Samples should now be highlighted.';
            } else {
                return '‚ùå Plus button (#mqc_colour_filter_update) not found';
            }
        },

        // Click Apply button (WORKING VERSION)
        clickApplyButton: function() {
            const access = window.dash_clientside.multiqc.getIframeAccess();
            if (!access.success) {
                return access.error;
            }
            
            const iframeDoc = access.doc;
            const applyButton = iframeDoc.querySelector(window.dash_clientside.multiqc.selectors.applyButton);
            
            if (applyButton) {
                // Force enable if needed
                applyButton.disabled = false;
                applyButton.classList.remove('btn-default');
                applyButton.classList.add('btn-primary');
                applyButton.click();
                return '‚úÖ Apply button clicked! Changes applied to MultiQC charts.';
            } else {
                return '‚ùå Apply button (#mqc_cols_apply) not found';
            }
        },

        // Set pattern in MultiQC input (extracted from working inline code)
        setPattern: function(pattern) {
            const access = window.dash_clientside.multiqc.getIframeAccess();
            if (!access.success) {
                return access.error;
            }
            
            const iframeDoc = access.doc;
            const input = iframeDoc.querySelector(window.dash_clientside.multiqc.selectors.customPatternInput);
            
            if (input) {
                input.value = '';
                input.value = pattern;
                input.dispatchEvent(new Event('input', { bubbles: true }));
                input.dispatchEvent(new Event('change', { bubbles: true }));
                
                return access.status +
                       `‚úÖ AUTO-APPLIED: Pattern "${pattern}" set in MultiQC\n` +
                       '   - Click "Test + Button" to add highlighting';
            } else {
                return '‚ùå MultiQC input not found';
            }
        },

        // Test sample input functionality (from working inline version)
        testSampleInput: function() {
            const access = window.dash_clientside.multiqc.getIframeAccess();
            if (!access.success) {
                return access.error;
            }
            
            const iframeDoc = access.doc;
            const input = iframeDoc.querySelector(window.dash_clientside.multiqc.selectors.customPatternInput);
            
            if (input) {
                input.value = '';
                input.value = '00050101';
                input.dispatchEvent(new Event('input', { bubbles: true }));
                input.dispatchEvent(new Event('change', { bubbles: true }));
                input.dispatchEvent(new Event('keyup', { bubbles: true }));
                
                return access.status + 
                       `‚úÖ SUCCESS: Sample ID set in MultiQC Custom Pattern input!\n` +
                       `   - Element: INPUT#${input.id}\n` +
                       `   - Placeholder: "${input.placeholder}"\n` +
                       `   - Current value: "${input.value}"\n` +
                       `   - Input/change/keyup events dispatched successfully`;
            } else {
                return access.status + 
                       '‚ùå FAILED: Could not find #mqc_colour_filter input';
            }
        },

        // Simulate Enter key press
        simulateEnterKey: function() {
            const access = window.dash_clientside.multiqc.getIframeAccess();
            if (!access.success) {
                return access.error;
            }
            
            const iframeDoc = access.doc;
            const input = iframeDoc.querySelector(window.dash_clientside.multiqc.selectors.customPatternInput);
            
            if (input) {
                input.focus();
                
                // Try to trigger form submission
                const enterEvent = new KeyboardEvent('keydown', {
                    key: 'Enter',
                    code: 'Enter',
                    keyCode: 13,
                    which: 13,
                    bubbles: true
                });
                input.dispatchEvent(enterEvent);
                
                const enterUpEvent = new KeyboardEvent('keyup', {
                    key: 'Enter',
                    code: 'Enter', 
                    keyCode: 13,
                    which: 13,
                    bubbles: true
                });
                input.dispatchEvent(enterUpEvent);
                
                // Also try triggering the form submit directly
                const form = iframeDoc.querySelector(window.dash_clientside.multiqc.selectors.colorForm);
                if (form) {
                    form.dispatchEvent(new Event('submit', { bubbles: true }));
                }
                
                return access.status +
                       `‚úÖ SUCCESS: Enter key + form submit attempted!\n` +
                       `   - Input: ${window.dash_clientside.multiqc.selectors.customPatternInput}\n` +
                       `   - Input value: "${input.value}"\n` +
                       `   - KeyDown + KeyUp events sent\n` +
                       `   - Form submit event sent: ${form ? 'Yes' : 'No'}`;
            } else {
                return access.status + 
                       '‚ùå FAILED: Could not find input for Enter key simulation';
            }
        },

        // Full automation: Pattern ‚Üí Plus ‚Üí Apply
        fullAutomation: function(pattern) {
            try {
                // Step 1: Set pattern
                const setResult = window.dash_clientside.multiqc.setPattern(pattern);
                if (setResult.includes('‚ùå')) {
                    return setResult;
                }
                
                // Small delay then Step 2: Click Plus
                setTimeout(() => {
                    const plusResult = window.dash_clientside.multiqc.clickPlusButton();
                    if (plusResult.includes('‚úÖ')) {
                        // Small delay then Step 3: Click Apply
                        setTimeout(() => {
                            window.dash_clientside.multiqc.clickApplyButton();
                        }, 100);
                    }
                }, 100);
                
                return `üöÄ FULL AUTOMATION STARTED for pattern "${pattern}"\n` +
                       '‚úÖ Step 1: Pattern set\n' +
                       '‚è≥ Step 2: Plus button (in progress)\n' +
                       '‚è≥ Step 3: Apply button (in progress)';
                       
            } catch (error) {
                return `‚ùå Automation Error: ${error.message}`;
            }
        }
    })
});